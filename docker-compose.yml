version: "2"

services:
################ LAMP Stack.
  php-fpm:
# Pls, check image tags, latest is php-7, but we have php-5 too.
    # build: docker/images/php-fpm/.
    image: lordius/alpine-php_fpm
    # image: lordius/alpine-php_fpm:php-5
    # image: lordius/alpine-php_fpm:php-7
    links:   
      - mariadb      
      # - redis
      # - memcached
      # - solr
    depends_on:
      - mariadb
      # - redis
      # - memcached
      # - solr      
    volumes:
      - ./crontasks.txt:/home/crontasks.txt
      - ./htdocs:/var/www/localhost/htdocs
      # Attach sample configs if necessary.      
      # - ./docker/runtime/php7:/temp_configs_dir/php7      
      # - ./docker/runtime/php5:/temp_configs_dir/php5
    environment:
      DRUSH_VERSION: 8.x
      PHP_SHOW_ERRORS: 1
      CRONTAB_ENABLED: 0
      PHP_FPM_PORT: 7000
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -i -t
      PHP_SENDMAIL_HOST: mailhog
      PHP_SENDMAIL_PORT: 1025
      PHP_XDEBUG_ENABLED: 1
      PHP_XDEBUG_PORT: 9000
      PHP_MAX_EXECUTION_TIME: 250
      PHP_UPLOAD_MAX_FILESIZE: 12G
      PHP_POST_MAX_SIZE:12G
      PHP_ALLOW_URL_FOPEN: "On"
      PHP_ALWAYS_POPULATE_RAW_POST_DATA: -1
      PHP_SHORT_OPEN_TAG: 1
      PHP_MEMORY_LIMIT: 2024M
    networks:
      internal:
      shared:
        ipv4_address: 172.55.0.2
    extra_hosts:
      - "site.dockerlamp:172.55.0.4" 

  apache2_mpm:
    image: lordius/alpine-apache
    links:
      - php-fpm
    depends_on:
      - php-fpm
    # Attach sample configs if necessary.      
    # volumes:
    #   - ./docker/runtime/apache2:/temp_configs_dir/apache2
    volumes_from:
      - php-fpm
    environment:
      APACHE_TIMEOUT: 300
      DOCUMENT_ROOT: /var/www/localhost/htdocs
      PROXY_PASS: fcgi://php-fpm:7000/var/www/localhost/htdocs
      APACHE_LISTEN_PORT: 80
    ports:
      - '80:80'
    networks:
      internal:
      shared:
        ipv4_address: 172.55.0.3

  nginx:
    image: lordius/alpine-nginx
    links:
      - apache2_mpm
    depends_on:
      - apache2_mpm
    # Attach sample configs if necessary.      
    # volumes:
    #   - ./docker/runtime/nginx:/temp_configs_dir/nginx              
    volumes_from:
      - php-fpm
    environment:
      KEEPALIVE_TIMEOUT: 3000
      LISTEN_PORT: 80
      SERVER_ROOT: /var/www/localhost/htdocs
      SERVER_NAME: localhost
      CLIENT_MAX_BODY_SIZE: 32m
      PROXY_CONNECT_TIMEOUT: 3000
      PROXY_SEND_TIMEOUT: 3000
      PROXY_READ_TIMEOUT: 3000
      SEND_TIMEOUT: 3000
      PROXY_PASS: http://apache2_mpm:80
    ports:
      - '81:80'
    networks:
      internal:
      shared:
        ipv4_address: 172.55.0.4


################ Node stack.
  # node:
  #   image: node:alpine
  #   links:
  #     - mongo
  #   depends_on:
  #     - mongo
  #   environment:
  #   - NODE_ENV=production
  #   volumes:
  #     - ./htdocs:/usr/src/app
  #   working_dir: /usr/src/app
  #   expose:
  #   - "3000"
  # # You could use any command to running. Or run without any command and execute code inside image.
  # # E.g: `docker exec -it dockercomposelamp_node_1 ash` and then inside container go to `/usr/src/app` and run node.
  #   # command: ash -c "PORT=3000 DEBUG=htdocs:* npm start"
  #   command: ash -c "PORT=3000 node server.js"
  #   networks:
  #     internal:
  #     shared:
  #       ipv4_address: 172.55.0.5
        
################ Extra toolkit images.
  # solr:
  #   image: solr:6-alpine
  #   volumes:
  #     # Example of drupal solr core configuration. 6.x. Check image tag for correct config. 
  #     - ./docker/runtime/solr:/opt/solr/server/solr/mycores
  #   entrypoint:
  #     - docker-entrypoint.sh
  #     - solr-precreate
  #     - drupal_6x_core
  #   networks:
  #     internal:    
  #     shared:
  #       ipv4_address: 172.55.0.8

################ DB managers.
# Requires mariadb container.        
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - mariadb
    depends_on:
      - mariadb
    environment:
      PMA_HOST: mariadb
      PHP_UPLOAD_MAX_FILESIZE: 12G
      PHP_MAX_INPUT_VARS: 12G
    ports:
      - '82:80'
    networks:
      internal:
      shared:
        ipv4_address: 172.55.0.9
        
  adminer:
    image: adminer
    links:
      - mariadb
      - postgres
      - mongo
    depends_on:
      - mariadb
    ports:
      #- '83:80'
      - '83:8080'
    restart: always
    networks:
      internal:
      shared:
        ipv4_address: 172.55.0.10

################ Database images.
  mariadb:
    image: yobasystems/alpine-mariadb
    # build: docker/images/mysql/.
    volumes:
      - ./docker/runtime/mysql/lib:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: testdrive
      MYSQL_PASSWORD: testdrive
      MYSQL_DATABASE: testdrive
    # command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci # The simple way to override the mariadb config.
    ports:
      - '3306:3306'
    networks:
      - internal
################ Cache-memory images.
  # redis:
  #   image: redis:alpine
  #   networks:
  #     - internal

  # memcached:
  #   image: memcached:alpine
  #   networks:
  #     - internal

################ Selenium image configuration and php-fpm-data as proxy container for selenium.
  # php-fpm-data:
  #   image: lordius/alpine-php_fpm
  #   networks:
  #     - internal

  # selenium:
  #   image: selenium/standalone-firefox-debug:2.48.2
  #   links:
  #     - php-fpm
  #   ports:
  #     - "4444"
  #     - "5900"
  #   cap_add:
  #     - NET_ADMIN
  #     - NET_RAW
  #   networks:
  #     shared:
  #       ipv4_address: 172.55.0.11
  
